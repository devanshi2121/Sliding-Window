Brute Force - O(n*n)
class Solution {
    public int numberOfSubstrings(String s) {
        int[] hash=new int[3];
        int count=0;
        for(int i=0;i<s.length();i++){
            Arrays.fill(hash,0);
            for(int j=i;j<s.length();j++){
                hash[s.charAt(j)-'a']=1;
                if(hash[0]+hash[1]+hash[2]==3){
                    count+=s.length()-j;
                    break;
                }
            }
        }
        return count;
    }
}

Optimal Approach -
class Solution {
    public int numberOfSubstrings(String s) {
        int a=-1,b=-1,c=-1;
        int count=0;
        for(int i=0;i<s.length();i++){
            if(s.charAt(i)=='a'){
                a=i;
            } 
            else if(s.charAt(i)=='b'){
                b=i;
            }
            else{
                c=i;
            }
            if(a!=-1 && b!=-1 && c!=-1){
                count+=(1+Math.min(a,Math.min(b,c)));
            }
        }
        return count;
    }
}
